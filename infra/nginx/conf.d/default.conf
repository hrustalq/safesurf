# HTTP redirect to HTTPS
server {
    listen 80;
    server_name safesurf.tech www.safesurf.tech api.safesurf.tech admin.safesurf.tech;
    
    # Development domains
    server_name safesurf.local www.safesurf.local api.safesurf.local admin.safesurf.local;
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# Public Website
server {
    listen 443 ssl;
    server_name safesurf.tech www.safesurf.tech;
    server_name safesurf.local www.safesurf.local;

    ssl_certificate /etc/nginx/ssl/safesurf.crt;
    ssl_certificate_key /etc/nginx/ssl/safesurf.key;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    
    location / {
        proxy_pass http://web:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Admin Panel
server {
    listen 443 ssl;
    server_name admin.safesurf.tech;
    server_name admin.safesurf.local;

    ssl_certificate /etc/nginx/ssl/safesurf.crt;
    ssl_certificate_key /etc/nginx/ssl/safesurf.key;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    location / {
        proxy_pass http://admin:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# API Server
server {
    listen 443 ssl;
    server_name api.safesurf.tech;
    server_name api.safesurf.local;

    ssl_certificate /etc/nginx/ssl/safesurf.crt;
    ssl_certificate_key /etc/nginx/ssl/safesurf.key;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

    location / {
        proxy_pass http://api:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
} 