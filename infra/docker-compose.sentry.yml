version: '3.8'

services:
  # Update API service to include Sentry configuration
  api:
    environment:
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_ENVIRONMENT=${NODE_ENV}
      - SENTRY_TRACES_SAMPLE_RATE=1.0

  # Sentry Services
  sentry-postgres:
    image: postgres:15-alpine
    container_name: sentry-postgres
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      POSTGRES_DB: sentry
    volumes:
      - sentry_postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  sentry-redis:
    image: redis:7-alpine
    container_name: sentry-redis
    networks:
      - app-network

  sentry:
    image: getsentry/sentry:latest
    container_name: sentry
    depends_on:
      - sentry-redis
      - sentry-postgres
    ports:
      - "${SENTRY_PORT:-9000}:9000"
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: sentry-redis
    volumes:
      - sentry_data:/var/lib/sentry/files
    networks:
      - app-network

  sentry-cron:
    image: getsentry/sentry:latest
    container_name: sentry-cron
    depends_on:
      - sentry
    command: "sentry run cron"
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: sentry-redis
    networks:
      - app-network

  sentry-worker:
    image: getsentry/sentry:latest
    container_name: sentry-worker
    depends_on:
      - sentry
    command: "sentry run worker"
    environment:
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: ${SENTRY_DB_PASSWORD:-sentry}
      SENTRY_REDIS_HOST: sentry-redis
    networks:
      - app-network

volumes:
  sentry_postgres_data:
  sentry_data: 